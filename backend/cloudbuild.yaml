# Cloud Build configuration for Backend API
# Builds Docker image and deploys to Cloud Run

substitutions:
  _REGION: us-central1
  _SERVICE_NAME: ${_ENVIRONMENT}-vividly-api
  _REPOSITORY: ${_ENVIRONMENT}-vividly-images
  _IMAGE_NAME: backend-api

steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:${SHORT_SHA}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:latest'
      - '-f'
      - 'Dockerfile'
      - '.'
    dir: 'backend'

  # Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:${SHORT_SHA}'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:latest'

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'update'
      - '${_SERVICE_NAME}'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'

  # Run database migrations
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'jobs'
      - 'create'
      - '${_SERVICE_NAME}-migrate-${BUILD_ID}'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--command=alembic'
      - '--args=upgrade,head'
      - '--set-env-vars=ENVIRONMENT=${_ENVIRONMENT}'
      - '--set-secrets=DATABASE_URL=database-url-${_ENVIRONMENT}:latest'
      - '--vpc-connector=projects/${PROJECT_ID}/locations/${_REGION}/connectors/${_ENVIRONMENT}-cloud-run-connector'
      - '--service-account=${_ENVIRONMENT}-cloud-run-sa@${PROJECT_ID}.iam.gserviceaccount.com'
      - '--execute-now'
      - '--wait'
    dir: 'backend'

# Store images in Artifact Registry
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:${SHORT_SHA}'
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:latest'

options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

timeout: '1800s'
